<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>
 
<module>
    <!-- module's name should match its executable file's name. -->
    <name>tool3DManager</name>
    <description> Manager which controls the rest of the modules of the tool-pose dependent Affordance Experiment and enables user control.</description>
        <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
    <version>1.0</version>
    
    <description-long>
    This modules relies user commands to the rest of the modules in the tool-pose dependent affordance 
    Experiment, in order to allow for the required feature extraction, action performance and effect observation. \n
    It also executes basic motor actions to observe the tool. \n
    It works with minor differences on the real robot and the simulator, save the necessary ones to grab the tool. 
     
        </description-long>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>    
    <param desc="Name of the module" default="affManager"> name</param>
    <param desc="Robot used" default="icub"> robot</param>
    <param desc="Hand/arm used" default="right"> hand</param>
    <param desc="Camera used" default="left"> camera</param>   
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
	  <author email="tanis.mar@iit.it"> Tanis Mar</author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <!-- input data if available -->
        <!--
        <input port_type="service">
            <type>rpc</type>
            <port carrier="tcp">/affManager/rpc:i</port>
            <description>takes RPC commands from Human or stateMachine</description>
        </input>
        <input>
            <type>Bottle</type>
            <port>/affManager/matlab:i</port>
            <description> Receives the affordance vector prediction from matlab to select te max effect and perfomr an action.</description>
        </input>
        <input>
            <type>Bottle</type>
            <port>/affManager/user:i</port>
            <description> Port for user input. Can be used for user selection of the tooltip, tool dimensions or other data.</description>
        </input>
        
        -->
        <!-- output data if available -->
        <!--
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/are:rpc</port>
            <description> Send commands to the Actions Rendering Engine module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/sim:rpc</port>
            <description> Send commands to the Simulator</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/karmaMotor:rpc</port>
            <description> Send commands to the Karma motor for tool use related actions</description>
        </output>
         <output port_type="service">
            <type>rpc</type>
            <port>/affManager/karmaFinder:rpc</port>
            <description> Send commands to the finder part of the KARMA application in order to display and locate the tooltip.</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/featExt:rpc</port>
            <description>Send commands to the Feature Extraction Module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/affLearn:rpc</port>
            <description> Send commands to the affordance Learning Module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/objFind:rpc</port>
            <description> Send commands to the objectFinder Module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/affManager/toolBlob:rpc</port>
            <description> Send commands to the toolBlobber Module</description>
        </output>
        <output>
            <type>Bottle</type>
            <port>/affManager/data:o</port>
            <description> Outputs affordance data for recording (action parameters, effect, etc)</description>
        </output>
        -->
    </data>
    
    <services>
    <!--
         <server>
            <type>IRpcServer</type>
            <idl>affManager.thrift</idl>
            <port>/rpcIdl/server</port>
            <description>Command port</description>
        </server>
        -->
    </services>

    <dependencies>
        <computer>
        Assume that robotInterface (with ICartesianControl interface implemented) is running. 
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
    </development>

</module>

