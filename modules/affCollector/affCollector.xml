<module>
    <!-- module's name should match its executable file's name. -->
    <name>affCollector</name>
    <description>Accepts labels of objects/tool/categories, and for each, based on pairs action-effect, computes and updates the success rate of each label for each action.</description>
    <version>1.0</version>
    
    <description-long>
   XXXXXX
    </description-long>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>
        <param desc="Name of the module" default="affCollector"> name</param>
        <param desc="Sub-path from \c $ICUB_ROOT/app to the configuration file" default="AffordancesProject"> context </param>
        <param desc="Configuration file" default="affCollector.ini"> from </param> 
        <param desc="number of actions in the repertoire" default="5"> numAct</param>
        <param desc="Selects whether effects are defined as binary (success/fail) or with a real number (for regression)" default="true"> binary</param>  
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
	  <author email="tanis.mar@iit.it"> Tanis Mar</author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <!-- input data if available -->
        <input port_type="service">
            <type>rpc</type>
            <port carrier="tcp">/affCollector/rpc:i</port>
            <description>takes the following RPC commands from Human or stateMachine:
                -# <b>setlabel</b> <i>(string)label</i>: Activates a label (object/tool/cateagory/etc, user defined), for which affordance data (action success rate) can be updated, or creates a new one if the given does not exist yet.

                -# <b>getlabel</b> Returns the active label (object/tool/cateagory/etc, user defined).

                -# <b>updateAff</b> <i>(int)action (double)effect</i>: For the given active label, update its affordance succes rate for a given action, based on its effect.

                -# <b>getAffs</b> <i>(string)label (optional)</i>: Returns the success rate for all actions in the repertoire for a given known label (the active one by default).

                -# <b>selectTool</b> <i>(int)action</i>: Based on the previously learnt affordances, returns the best label for a given action/task.

                -# <b>clear</b> Clears all the learnt affordances of the active label, and sets it to unknown. 
                -# <b>clearAll</b>Clears all the learnt affordances all labels, and sets them to unknown. 
                -# <b>verbose</b> <i>(bool)</i> Activates more verbose execution of the module.
                -# <b>help </b>: Produces help on rpc commands. 
            </description>
        </input>
        <input>
            <type>Bottle</type>
            <port carrier="udp">/affCollector/labels:i</port>
            <description>Receives labels for affordances</description>
        </input>
        <input>
            <type>Bottle</type>
            <port carrier="udp">/affCollector/aff:i</port>
            <description>Receives pairs of action-effect information to update affordance information</description>
        </input>    

        
        <!-- output data if available -->

        <output>
            <type>Bottle</type>
            <port carrier="tcp">/affCollector/aff:o</port>
            <description> Streams the success rate (affordances) of the active label</description>
        </output>
    </data>

    <dependencies>
        <computer>
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
    </development>

</module>

