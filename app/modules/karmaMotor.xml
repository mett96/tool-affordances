<module>
    <!-- module's name should match its executable file's name. -->
    <name>karmaMotor</name>
    <description>This modules allows to perform some complex behaviors used in tools use, such as finding the tooltip of a tool or pushing and drawing objects with it </description>
    <version>1.0</version>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>
        <param desc="Name of the module" default="karmaMotor"> name</param>
        <!--param desc="specifies the configuration file" default="/templatePFTracker.ini"> from </param>
        <param desc="specifies the sub-path from \c $ICUB_ROOT/icub/app to the configuration file" default="/templatePFTracker/conf"> context </param-->	
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
        <author email="vadim.tikhanoff@iit.it"> Vadim Tikhanoff </author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <input>
            <type>Rpc</type>
            <port carrier="tcp">/karmaMotor/rpc</port>
            <required>no</required>
            <priority>no</priority>
            <description>Receives commands to execute the different KARMA actions</description>
        </input>
        
        <input>
            <type>Bottle</type>
            <port carrier="tcp">/karmaMotor/vision:i</port>
            <required>no</required>
            <priority>no</priority>
            <description>receives the information about the pixel corresponding to the tool tip during the tool exploration phase</description>
        </input>

        <input>
            <type>Bottle</type>
            <port carrier="tcp">/karmaMotor/stop:i</port>
            <required>no</required>
            <priority>no</priority>
            <description>receives request for immediate stop of any ongoing processing.</description>
        </input>
        <!-- output datas if available -->
        <output>
            <type>rpc</type>
            <port carrier="udp">/karmaMotor/finder:rpc</port>
            <description> Communicates with the module in charge of solving for the tool's dimensions.</description>
        </output>
        
        
    </data>
    <dependencies>
        <computer>
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
        <library>icubmod</library>
    </development>

</module>

