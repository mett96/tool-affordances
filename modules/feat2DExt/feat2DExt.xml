<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>
 
 <module>
    <!-- module's name should match its executable file's name. -->
    <name>feat2DExt</name>
    <description> Extracts a set of 75 geometrical and contour features from the biggest blob in the image.</description>
        <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
    <version>1.0</version>
    
    <description-long>
    This modules receives an image, either binary or not, extracts the blobs and performs feature Extraction 
    of the biggest blob found. Features can be ordered in the following categories: 
    Convexity, Skeleton, Moments, Shape, Angle Signature, Fourier and Wavelet.
    By default is idle until a particular process order is received (snapshot or click), but can be set to process all incoming images with 'go'. 
     
    </description-long>
    
    <!-- <authors> can have multiple <author> tags. -->
    <authors>
	  <author email="tanis.mar@iit.it"> Tanis Mar </author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <input port_type="service">
            <type>rpc</type>
            <port carrier="tcp">/feat2DExt/rpc:i</port>
            <description> Takes the following RPC commands from Human or stateMachine
                -# <b>go</b>: Enables feature extraction on streaming images. Once this option is activated, it won't accept further rpc commands. 
                -# <b>label</b>  <i>(string) label</i> (default = 'undef'): sets the label that will be given to subsequently extracted feature vectors to string 'label'.             
                -# <b>setROI</b> <i>(int) tl.x (int) tl.y (int) br.x (int) br.y</i>: Sets a region of interest for feature extraction from the coordinates given as pixel positions. 
                -# <b>refAngle</b>  <i>(int) angle</i>: Sets the refernece angle for prespective nomalization of the blob to 'angle'.    
                -# <b>snapshot</b>: Performs feature extraction on a single frame. 
                -# <b>click</b>: "Asks user to click on viewer and performs feature extraction on the selected blob on one frame.
                -# <b>verbose</b> <i>(string) ON/OFF</i> : ON/OFF sets printfs of the extraction process on or off, respectively.
                -# <b>reset</b>: Resets ROI and all other set values to default. 
                -# <b>help </b>: Produces help on rpc commands. 
            </description>
        </input>
        <input>
            <type>ImageOfPixelRgb</type>
            <port carrier="udp">/feat2DExt/img:i</port>
            <required>yes</required>
            <priority>no</priority>
            <description> Port receiving incoming images to be processed</description>
        </input>
        <input>
            <type>Bottle</type>
            <port carrier="tcp">/feat2DExt/coords:i</port>
            <required>no</required>
            <priority>no</priority>
            <description> Port to receive coordinates to specify blob</description>
        </input>
        
        <!-- output data if available -->
        <output>
            <type>Vector(Vector(double))</type>
            <port carrier="udp">/feat2DExt/feats:o</port>
            <description>Sends the vector containing all the extracted features. </description>
        </output>
        <output>
            <type>Image</type>
            <port carrier="udp">/feat2DExt/imgProp:o</port>
            <description>Propagates the frame on which the feature extraction is performed, with the selected blob marked on top</description>
        </output>        
        <output>
            <type>Image</type>
            <port carrier="udp">/feat2DExt/imgFeat:o</port>
            <description>Sends an image with a visual rpresentation of some of the features extracted, for assessment</description>
        </output>

    </data>

    <dependencies>
        <computer>
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
        <library>OpenCV</library>
    </development>

</module>

