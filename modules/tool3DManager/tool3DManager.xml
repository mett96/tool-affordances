<!-- <?xml version="1.0" encoding="ISO-8859-1"?>     -->
<!-- <?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>  -->
 
<module>
    <!-- module's name should match its executable file's name. -->
    <name>tool3DManager</name>
    <description> Manager which controls the rest of the modules of the tool-pose dependent Affordance Experiment and enables user control.</description>
        <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
    <version>1.0</version>
    
    <description-long>
    This modules relies user commands to the rest of the modules in the tool-pose dependent affordance 
    Experiment, in order to allow for the required feature extraction, action performance and effect observation. \n
    It works with minor differences on the real robot and the simulator, save the necessary ones to grab the tool. 
    </description-long>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>    
    <param desc="Name of the module" default="tool3DManager"> name</param>
    <param desc="Robot used" default="icub"> robot</param>
    <param desc="Hand/arm used" default="right"> hand</param>
    <param desc="Camera used" default="left"> camera</param>   
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
	  <author email="tanis.mar@iit.it"> Tanis Mar</author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <!-- input data if available -->        
        <input port_type="service">
            <type>rpc</type>
            <port carrier="tcp">/tool3DManager/rpc:i</port>
            <description>takes RPC commands </description>
        </input>
        <input>
            <type>Bottle</type>
            <port carrier="tcp">/tool3DManager/matlab:i</port>
            <description>receives info from MATLAB, for example, the predicted affrodance for a given tool</description>
        </input>
        <input>
            <type>Bottle</type>
            <port carrier="tcp">/tool3DManager/track:i</port>
            <description>receives tl,br bounding box information from tracker (such as lbpExtract)</description>
        </input>        

        <!-- output data if available -->
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/are:rpc</port>
            <description> Send commands to the Actions Rendering Engine module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/are:get</port>
            <description> Send commands to the Actions Rendering Engine module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/simToolLoader:rpc</port>
            <description> Send commands to simtoolloader</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/simulator:rpc</port>
            <description> Send commands to icub simulator</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/affMotor:rpc</port>
            <description> Send commands to the Affordance Motor Module for tool use related actions</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/toolinc:rpc</port>
            <description> Send commands to the object3Dexplorer for tool pose estimation.</description>        
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/objFind:rpc</port>
            <description> Send commands to the objectFinder Module</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/tool3DManager/clasif:rpc</port>
            <description> Send commands classifier module to learn hand (or tools)</description>
        </output>
        <output>
            <type>Bottle</type>
            <port>/tool3DManager/affData:o</port>
            <description> Port to send data of held tool, action and effect for recording </description>
        </output>
    </data>    

    <services>
    </services>

    <dependencies>
        <computer>
	        Assume that robotInterface (with ICartesianControl interface implemented) is running.
		For tool use communicates with affMotorcd  and objects3DExplorer.
		For simulation needs simulator running and simtoolloader to load and place tools.
		For experimental recording needs a tracker (obj3Dexp or other) and featExt.			
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
    </development>

</module>

