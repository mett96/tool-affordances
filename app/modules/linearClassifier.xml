<module>
    <!-- module's name should match its executable file's name. -->
    <name>linearClassifier</name>
    <description>This module is responsible for learning and classify feature vectors. Input features are passed, the output are the scores of SVM machines. The module provides training methods with real-time performances.</description>
    <version>1.0</version>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>    
    <param desc="BufferSize for weighting the output scores." default="buffer"> BufferSize</param>
    <param desc="Value for the regularization parameter used during the training." default=""> CSVM</param>
    <param desc="Useful parameter of unbalanced dataset. If 1 it weights positive examples such as their contribution is equal to the negative ones." default=""> WeightedSVM</param>
    <param desc="specify the database folder were feature vector will be stored." default=""> databaseFolder</param>   
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
        <author email=""> Sean Ryan Fanello </author>
        <author email=""> xml by Tanis Mar </author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <input>
            <type>Bottle</type>
            <port carrier="udp">/linearClassifier/features:i</port>
            <required>no</required>
            <priority>no</priority>
            <description>  receives feature vector. </description>
        </input>
        <input port_type="service">
            <type> Rpc</type>
            <port carrier="tcp">/linearClassifier/rpc</port>
            <required>no</required>
            <priority>no</priority>
            <description>receives requests for SIFT dump or dictionary learning.</description>
        </input>

        <!-- output datas if available -->
        <output>
            <type>Bottle</type>
            <port carrier="udp">/linearClassifier/classification:o</port>
            <description> Streams out the current class winner name. </description>
        </output>
        <output>
            <type>Bottle</type>
            <port carrier="udp">/linearClassifier/scores:o</port>
            <description> Streams out the scores for the received input in the format "class" "score" </description>
        </output>
    </data>

    <dependencies>
        <computer>
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
        <library>OpenCV</library>
    </development>

</module>

